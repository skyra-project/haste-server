name: Continuous Deployment - Haste Server

on:
  push:
    branches:
      - main
    paths:
      - 'haste-server/**'
      - '.github/workflows/haste-server-deployment.yml'

jobs:
  Linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/eslint.json"
      - name: Use Node.js v16
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: 16
      - name: Install Dependencies
        run: yarn --immutable
        working-directory: haste-server
      - name: Run ESLint
        run: yarn lint --fix=false
        working-directory: haste-server

  Building:
    name: Building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v16
        uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: 16
      - name: Restore Parcel Cache
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # tag=v3.0.4
        with:
          path: ${{ github.workspace }}/haste-server/.parcel-cache
          key: ${{ runner.os }}-parcel-${{ hashFiles('**/haste-server/yarn.lock') }}
      - name: Install Dependencies
        run: yarn --immutable
        working-directory: haste-server
      - name: Run Parcel Build
        run: yarn build
        working-directory: haste-server
      - name: Store dist folder
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        with:
          name: distfolder
          path: haste-server/dist/

  Publish:
    name: Publish image to container registries
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip docker]')"
    needs: [Linting, Building]
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Download dist folder
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v3
        with:
          name: distfolder
          path: haste-server/dist/
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6 # tag=v2.0.0
      - name: Login to DockerHub
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # tag=v2.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # tag=v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # tag=v3.0.0
        with:
          push: true
          context: ./haste-server
          tags: |
            skyrabot/haste-server:latest
            ghcr.io/skyra-project/haste-server:latest
      - name: Update repo description
        uses: peter-evans/dockerhub-description@836d7e6aa8f6f32dce26f5a1dd46d3dc24997eae # tag=v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: skyrabot/haste-server
          readme-filepath: ./haste-server/README.md
          short-description: Up2date and maintained Hastebin server - https://hastebin.skyra.pw
