name: Continuous Deployment - Haste Server

on:
  push:
    branches:
      - main
    paths:
      - 'haste-server/**'
      - '.github/workflows/haste-server-deployment.yml'

jobs:
  Linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/eslint.json"
      - name: Use Node.js v16
        uses: actions/setup-node@04c56d2f954f1e4c69436aa54cfef261a018f458 # renovate: tag=v2
        with:
          node-version: 16
          cache: yarn
      - name: Install Dependencies
        run: yarn --frozen-lockfile
        working-directory: haste-server
      - name: Run ESLint
        run: yarn lint --fix=false
        working-directory: haste-server

  Building:
    name: Building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v16
        uses: actions/setup-node@04c56d2f954f1e4c69436aa54cfef261a018f458 # renovate: tag=v2
        with:
          node-version: 16
          cache: yarn
      - name: Restore Parcel Cache
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2.1.7
        with:
          path: ${{ github.workspace }}/haste-server/.parcel-cache
          key: ${{ runner.os }}-parcel-${{ hashFiles('**/haste-server/yarn.lock') }}
      - name: Install Dependencies
        run: yarn --frozen-lockfile
        working-directory: haste-server
      - name: Run Parcel Build
        run: yarn build
        working-directory: haste-server
      - name: Store dist folder
        uses: actions/upload-artifact@da838ae9595ac94171fa2d4de5a2f117b3e7ac32 # renovate: tag=v2
        with:
          name: distfolder
          path: haste-server/dist/

  Publish:
    name: Publish image to container registries
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip docker]')"
    needs: [Linting, Building]
    steps:
      - name: Checkout Project
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Download dist folder
        uses: actions/download-artifact@3be87be14a055c47b01d3bd88f8fe02320a9bb60 # renovate: tag=v2
        with:
          name: distfolder
          path: haste-server/dist/
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1.6.0
      - name: Login to DockerHub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: tag=v2.7.0
        with:
          push: true
          context: ./haste-server
          tags: |
            skyrabot/haste-server:latest
            ghcr.io/skyra-project/haste-server:latest
      - name: Update repo description
        uses: peter-evans/dockerhub-description@616d1b63e806b630b975af3b4fe3304307b20f40 # renovate: tag=v2.4.3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: skyrabot/haste-server
          readme-filepath: ./haste-server/README.md
          short-description: Up2date and maintained Hastebin server - https://hastebin.skyra.pw
